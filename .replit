modules = ["nodejs-20", "web", "postgresql-16"]

# Programmatic bootstrap: writes scripts/bootstrap.sh if missing, then runs it.
run = """bash -lc '
set -Eeuo pipefail
mkdir -p scripts

cat > scripts/bootstrap.sh << "EOS"
#!/usr/bin/env bash
# kill -> clean -> install -> chrome -> start
set -Eeuo pipefail
log(){ printf "\n[%s] %s\n" "$(date +%H:%M:%S)" "$*"; }

log "BEGIN"
node -v || true
npm -v || true
df -h . || true

log "killing stray node/tsx"
pkill -9 -f node || true
pkill -9 -f tsx || true
pkill -9 -f ts-node || true

# If disk usage >= 98%, free safe stuff
if df -P . | awk "NR==2 {exit (\$5+0<98)}"; then
  log "disk very full; cleaning caches and large artifacts"
  rm -rf .cache .npm _npx puppeteer .local-chromium || true
  find . -type f -name "*.pptx" -size +5M -delete || true
  find . -type f -name "*.pdf"  -size +5M -delete || true
fi

# Install only if any package is missing
NEED=0
for p in docx pptxgenjs puppeteer axios typescript tsx @types/node; do
  node -e "require.resolve('$p')" >/dev/null 2>&1 || { NEED=1; break; }
done
if [ "$NEED" -eq 1 ]; then
  log "installing npm packages"
  npm i docx pptxgenjs puppeteer axios typescript tsx @types/node --no-fund --no-audit
else
  log "npm packages already present"
fi

log "ensuring Chrome for Puppeteer"
npx puppeteer browsers install chrome || true

log "starting app (npm run dev)"
exec npm run dev
EOS

chmod +x scripts/bootstrap.sh
scripts/bootstrap.sh
'"""

hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
build = ["npm", "run", "build"]
run = ["npm", "run", "start"]

[[ports]]
localPort = 5000
externalPort = 80

[env]
PORT = "5000"

[workflows]
runButton = "Start application"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000
